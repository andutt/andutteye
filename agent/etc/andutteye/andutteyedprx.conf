#
# $Id: andutteyedprx.conf 608 2008-03-11 19:24:42Z andutt $
#
# This is the configuration for andutteyed_proxy program that serves all 
# communication between: 
# andutteye modules <-> andutteyed_proxy <-> andutteye server. All parameters
# must have a value after the = sign, the parameter formatting is important
# since the program parses the configration in a certain way.
#
# The andutteyed_proxy by default is only listening for transmission from
# local andutteye modules, but the proxy can also be used for loadbalancing
# when using andutteye in big enterprise enviroments such as 1000 servers
# and up. Then define the proxy to listen on the ipadress for the interface
# you want to use. Review the loadbalancing and failover parameters for more 
# information.
#
# Use this local adress for communication with local Andutteye modules.
# By default this adress is 127.0.0.1 wich only serves communication
# from local Andutteye modules, which gives a little more security.
Local_listen_address            =127.0.0.1

# 
# Use this local port for communication with local Andutteye modules.
Local_listen_port               =32000

#
# Use this Andutteye server to send messages and information to.
# Multiple andutteye servers can be specified and must be if 
# using any of the loadbalancing or failover parameters.
Remote_listen_address           =192.168.1.137

#
# Use this Andutteye port to send messages and information to.
# Multiple andutteye ports can be specified and must be if
# using any of the loadbalancing or failover parameters.
Remote_listen_port              =32000

#
# Enable ssl encryption of all communication between com program, modules
# and Andutteye server. The IO::Socket::SSL module must be installed on
# the system for this to function properly.
Enable_ssl_encryption           =no

#
# With message caching enabled all messages that cant be delivered will
# be cached in a local message buffer in the program. When connectivity
# are restored all cached messages will be retransfered to the Andutteye
# server
Enable_message_caching          =yes

#
# Enable syslog notification if errors in the program or other information
# shall be reported to the local syslog facil√≠ty.
Enable_syslog_notification      =yes

# 
# Enable daemon mode if andutteyed_proxy shall refork and execute as a daemon.
# All output from the program will be redirected based on log location 
# parameters below. If set to no the program will run in the foreground.
Enable_daemon_mode              =yes

#
# Use following smtp server to relay email notifications by.
Use_smtp_server                 =localhost

#
# Specify what the from email should be.
Use_mail_from_adress            =andutteye

#
# Use following mail subject in notifications from the proxy.
Use_mail_subject                =This is a message from Andutteye

#
# Use following ssl server key when ssl encryption is on.
Use_ssl_server_key              =None

#
# Use following ssl server certification when ssl encryption is on.
Use_ssl_server_cert             =None

#
# andutteyed_proxy and all other andutteye programs will execute hooks
# before and after certain important tasks to be able to integrate
# Andutteye and Andutteye information with other applications and 
# software. The program will search for andutteyed_proxy-pre and
# andutteyed_proxy-post. If they exists they will be executed.
Use_hooks_directory             =/usr/bin

#
# Change verbosity level of the program here. 0 is completly silent and
# 5 is the most verbose level of the program.
Use_debug_level			=2

#
# With the cache burst limit you can control how many messages that
# andutteyed_proxy shall send in one flow before it shall wait to let
# the Andutteye server "Catch its breath :)". With this one can control
# so that the Andutteye server isnt getting flooded.
Use_cache_burst_limit		=20

#
# Use_max_cache_limit specify the max number of messages the proxy
# can save in memory before starting to reject messages.
# This is used so that the proxy doesnt run out on memory.
Use_max_cache_limit		=2000

#
# Use replication method to be able to send andutteye data to multiple
# andutteye servers, standby server or multiple listen ports if for some 
# reason the primary anduteye server or port is down.
#
# * replicate_backup = Send data to the second andutteye server if the 
#                      first is down. If any are specified.
# * replicate_server = Send data to all andutteye servers specified.
# * replicate_port   = Send data to all andutteye ports specified.
#                      One can have multiple andutteye server listening on
#                      different ports.
# * replicate_all    = Send data to all andutteye servers and ports specified.
Use_replication_method		=backup

#
# Use following directory to store logfiles from the program.
Log_dir_location                =/var/log/andutteye

#
# Use following directory for caching and temporary data.
Cache_dir_location              =/var/cache/andutteye
#
# System name
System_identification_name      =thundera-develop


#
# System key is used for authentication with the andutteye server.
# Its generated automaticly when the proxy is started for the first
# time.
System_identification_key       =060d9650e2572e5353056252bb576b8b

